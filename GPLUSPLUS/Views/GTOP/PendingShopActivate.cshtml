@model GPLUSPLUS.Models.ShopCustomPending

@{
    ViewBag.Title = "PendingShopActivate";
}

<style>
    .datagrid {
      margin:auto;
   margin:40px auto 40px auto;
  font-family:B Koodak,Arial, sans-serif;
    direction:rtl;
    width:50%;
    }

    .Actionlink_style {
    color:blue;
    font: normal 12px/150% ,B Koodak,Arial, sans-serif;
    }
     .Actionlink_style:hover {
    color:orange;
    text-decoration:underline;
    }
    .datagrid table { border-collapse: collapse; text-align: center; width: 100%; } 
    .datagrid {font: normal 12px/150% ,B Koodak,Arial, sans-serif; background: #fff; overflow: hidden; border: 1px solid #36752D; -webkit-border-radius: 7px; -moz-border-radius: 7px; border-radius: 7px; }
    .datagrid table td, .datagrid table th { padding: 3px 2px;text-align:center;width:auto; }
    .datagrid table thead th {background:-webkit-gradient( linear, left top, left bottom, color-stop(0.05, #36752D), color-stop(1, #275420) );background:-moz-linear-gradient( center top, #36752D 5%, #275420 100% );filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#36752D', endColorstr='#275420');background-color:#36752D; color:#FFFFFF; font-size: 18px; font-weight: bold; border-left: 1px solid #36752D; } 
    .datagrid table thead th:first-child { border: none; }
    .datagrid table tbody td { color: #275420; border-left: 1px solid #C6FFC2;font-size: 12px;border-bottom: 1px solid #E1EEF4;font-weight: normal; }
    .datagrid table tbody .alt td { background: #DFFFDE; color: #275420; }
    .datagrid table tbody td:first-child { border-left: none; }
    
    .datagrid table tfoot td div { border: 1px solid #36752D;background: #DFFFDE;} 
    .datagrid table tfoot td { padding: 0; font-size: 12px } 
    .datagrid table tfoot td div{ padding: 2px; }
    .datagrid table tfoot td ul { margin: 0; padding:0; list-style: none; text-align: right; }
    .datagrid table tfoot  li { display: inline; }
    .datagrid table tfoot li a { text-decoration: none; display: inline-block;  padding: 2px 8px; margin: 1px;color: #FFFFFF;border: 1px solid #36752D;-webkit-border-radius: 3px; -moz-border-radius: 3px; border-radius: 3px; background:-webkit-gradient( linear, left top, left bottom, color-stop(0.05, #36752D), color-stop(1, #275420) );background:-moz-linear-gradient( center top, #36752D 5%, #275420 100% );filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#36752D', endColorstr='#275420');background-color:#36752D; }
    .datagrid table tfoot ul.active, .datagrid table tfoot ul a:hover { text-decoration: none;border-color: #275420; color: #FFFFFF; background: none; background-color:#36752D;}
    div.dhtmlx_window_active, div.dhx_modal_cover_dv { position: fixed !important; }

        .button_link {
            font-family:B Koodak,Arial, sans-serif;
             font: normal 12px/150% ,B Koodak,Arial, sans-serif;
          margin:auto;
    padding: 10px 15px;
    background-color:#36752D;
    color: #FFF;
    -webkit-border-radius: 4px;
    -moz-border-radius: 4px;
    border-radius: 4px;
    border: solid 1px #20538D;
    text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.4);
    -webkit-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.4), 0 1px 1px rgba(0, 0, 0, 0.2);
    -moz-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.4), 0 1px 1px rgba(0, 0, 0, 0.2);
    box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.4), 0 1px 1px rgba(0, 0, 0, 0.2);
    -webkit-transition-duration: 0.2s;
    -moz-transition-duration: 0.2s;
    transition-duration: 0.2s;
    -webkit-user-select:none;
    -moz-user-select:none;
    -ms-user-select:none;
    user-select:none;
    width:100px;
}
.button_link:hover {
    background: #28d288;
    border: solid 1px #2A4E77;
    text-decoration: none;
   color:white;
}
.button_link:active {
    -webkit-box-shadow: inset 0 1px 4px rgba(0, 0, 0, 0.6);
    -moz-box-shadow: inset 0 1px 4px rgba(0, 0, 0, 0.6);
    box-shadow: inset 0 1px 4px rgba(0, 0, 0, 0.6);
    background: #2E5481;
    border: solid 1px #203E5F;
}
    .tb_size {
        width:200px;
        height:150px
    }
</style>

<div style="text-align:center;padding-top:120px;"> @Html.ActionLink("بازگشت به لیست طرف قرارداد", "PendingShopsList",null,new{ @class = "button_link" })</div>
@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" })){
        @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="datagrid">
<table>
    <thead>
        <tr>
         <th colspan="2">
              @Html.Label("اطلاعات طرف قرارداد")
        </th>
        </tr>
    </thead>
  <tbody>
        <tr>
          <td>
             <div class="editor-label">
                @Html.Label("شماره قرارداد")
             </div>
          </td>
          <td>
            <div class="editor-field">
            @Html.TextBoxFor(model => model.Id,new { disabled = "disabled", @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.Id)
            </div>
          </td>
      </tr>
        <tr>
          <td>
               <div class="editor-label">
          @Html.Label("نام")
        </div>
        
          </td>
          <td>
           <div class="editor-field">
            @Html.TextBoxFor(model => model.FirstName)
            @Html.ValidationMessageFor(model => model.FirstName)
        </div>
          </td>
      </tr>
        <tr>
          <td>
           <div class="editor-label">
          @Html.Label("نام خانوادگی")
           </div>
          </td>
          <td>
            <div class="editor-field">
            @Html.TextBoxFor(model => model.LastName)
            @Html.ValidationMessageFor(model => model.LastName)
            </div>
          </td>
      </tr>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.Label("شماره همراه")
                </div>
            </td>
            <td>
                <div class="editor-field">
               @Html.TextBoxFor(model => model.Mobile)
               @Html.ValidationMessageFor(model => model.Mobile)
                </div>
            </td>
        </tr>
        <tr>
          <td>
             <div class="editor-label">
                @Html.Label("نام مرکز")
             </div>
          </td>
          <td>
            <div class="editor-field">
            @Html.TextBoxFor(model => model.ShopName)
            @Html.ValidationMessageFor(model => model.ShopName)
            </div>
          </td>
      </tr>
        <tr>
          <td>
               <div class="editor-label">
            @Html.Label("توضیحات مرکز")
        </div>
        
          </td>
          <td>
           <div class="editor-field">
          @Html.TextAreaFor(model => model.ShopDescription,new {   @class = "tb_size"  })
            @Html.ValidationMessageFor(model => model.ShopDescription)
        </div>
          </td>
      </tr>
       <tr>
          <td>
               <div class="editor-label">
            @Html.Label("شعار تبلیغاتی")
        </div>
        
          </td>
          <td>
           <div class="editor-field">
          @Html.TextAreaFor(model => model.ShopQuote,new {   @class = "tb_size"  })
            @Html.ValidationMessageFor(model => model.ShopQuote)
        </div>
          </td>
      </tr>
        <tr>
          <td>
           <div class="editor-label">
         @Html.Label("شماره تلفن مرکز")
           </div>
          </td>
          <td>
            <div class="editor-field">
             @Html.TextBoxFor(model => model.ShopTell)
            @Html.ValidationMessageFor(model => model.ShopTell)
            </div>
          </td>
      </tr>
        <tr>
            <td>
                <div class="editor-label">
                     @Html.Label("استان")
                </div>
            </td>
            <td>
                <div class="editor-field">
               @Html.DropDownListFor(m => m.ShopState, ViewData["StateName"] as List<SelectListItem>)
            @Html.ValidationMessageFor(model => model.ShopState)
                </div>
            </td>
        </tr>
        <tr>
          <td>
             <div class="editor-label">
                 @Html.Label("شهرستان")
             </div>
          </td>
          <td>
            <div class="editor-field">
              @Html.DropDownListFor(m => m.ShopCity, ViewData["CityName"] as List<SelectListItem>)
            @Html.ValidationMessageFor(model => model.ShopCity)
            </div>
          </td>
      </tr>
        <tr>
          <td>
               <div class="editor-label">
             @Html.Label("آدرس")
        </div>
        
          </td>
          <td>
           <div class="editor-field">
          @Html.TextAreaFor(model => model.ShopAddress)
            @Html.ValidationMessageFor(model => model.ShopAddress)
        </div>
          </td>
      </tr>
        <tr>
          <td>
           <div class="editor-label">
        @Html.Label("تاریخ درخواست")
           </div>
          </td>
          <td>
            <div class="editor-field">
              @Html.TextBoxFor(model => model.DateJoined,new { disabled = "disabled", @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.DateJoined)
            </div>
          </td>
      </tr>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.Label("نوع صنف")
                </div>
            </td>
            <td>
               <div class="editor-field">
                   @Html.DropDownListFor(m => m.F_ShopType_name, ViewData["ShopType"] as List<SelectListItem>)
            @Html.ValidationMessageFor(model => model.F_ShopType_name)
                </div>
            </td>
        </tr>
        <tr>
          <td>
             <div class="editor-label">
                @Html.Label("درخواست کد امتیازی")
             </div>
          </td>
          <td>
            <div class="editor-field">
           @Html.CheckBoxFor(model => model.AcceptCode,new { disabled = "disabled", @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.AcceptCode)
            </div>
          </td>
      </tr>
        <tr>
          <td>
               <div class="editor-label">
             @Html.Label("درخواست بنر تبلیغاتی")
        </div>
        
          </td>
          <td>
           <div class="editor-field">
         @Html.CheckBoxFor(model => model.AcceptBanner, new { Id = "AcceptBanner" })
            @Html.ValidationMessageFor(model => model.AcceptBanner)
        </div>
          </td>
      </tr>
        <tr>
          <td>
           <div class="editor-label">
       @Html.Label("درخواست صفحه شخصی")
           </div>
          </td>
          <td>
            <div class="editor-field">
              @Html.CheckBoxFor(model => model.AcceptSite)
            @Html.ValidationMessageFor(model => model.AcceptSite)
            </div>
          </td>
      </tr>
          <tr>
          <td>
           <div class="editor-label">
       @Html.Label("آدرس اینستاگرام")
           </div>
          </td>
          <td>
            <div class="editor-field">
              @Html.TextBoxFor(model => model.IntagramAddress)
            @Html.ValidationMessageFor(model => model.IntagramAddress)
            </div>
          </td>
      </tr>
                <tr>
          <td>
           <div class="editor-label">
       @Html.Label("آدرس وب سایت شخصی")
           </div>
          </td>
          <td>
            <div class="editor-field">
              @Html.TextBoxFor(model => model.PersonalSiteAddress)
            @Html.ValidationMessageFor(model => model.PersonalSiteAddress)
            </div>
          </td>
      </tr>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.Label("وضعیت درخواست")
                </div>
            </td>
            <td>
                <div class="editor-field">
                @Html.EditorFor(model => model.ShopRegisterStatus)
            @Html.ValidationMessageFor(model => model.ShopRegisterStatus)
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.Label("بنر تبلیغاتی")
                </div>
            </td>
            <td>
                 <div class="editor-field" style="text-align:center">
             @Html.TextBoxFor(model => model.S_ImageOf, new { type = "file" , Id = "ImageBrowser"  })
                @Html.ValidationMessageFor(model => model.S_ImageOf)
                </div>
            </td>
        </tr>
         

  </tbody>
 

</table>
    </div>
    <div style="text-align:center;padding-top:5px;padding-bottom:10px;"> <input class="button_link" type="submit" value="ذخیره" name="submitValue"  /></div>
  
}


@Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")



<script type="text/javascript">
    $(document).ready(function () {
        //Dropdownlist Selectedchange event
        $("#ShopState").change(function () {
            $("#ShopCity").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetCity", "Agents")', // we are calling json method
                dataType: 'json',
                data: { id: $("#ShopState").val() },
                success: function (states) {
                    // states contains the JSON formatted list
                    // of states passed from the controller
                    $.each(states, function (i, state) {
                        $("#ShopCity").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                    }); // here we are adding option for States
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        })

        $("#AcceptBanner").change(function () {
            if ($('#AcceptBanner').is(':checked')) {
                $('#ImageBrowser').css({'display': 'block'});
            }
            else {
                $('#ImageBrowser').css({ 'display': 'none' });
            }
        });

    });
</script>